#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#
#  Â© 2022 Telenav, Inc.
#  Licensed under Apache License, Version 2.0
#
#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#
# GitHub action that builds code on push or pull request.
#
defaults:
  run:
    shell: bash

name: "Build Release"

env:
    CACTUS_TEST_THREAD_DUMPS: true
    CACTUS_TEST_DEFAULT_DEBUG: false
    CACTUS_SLF4J_DEBUG: false

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'documentation/**'
      - '**/*.md'
    branches:
      - 'release/**'
  pull_request:
    paths-ignore:
      - 'documentation/**'
      - '**/*.md'
    branches:
      - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Building
        run: curl -X POST https://telenav.zulipchat.com/api/v1/messages -u message-bot@telenav.zulipchat.com:$ZULIP_API_KEY --data-urlencode type=stream --data-urlencode to=github-notifications --data-urlencode topic=builds --data-urlencode content="Building $GITHUB_REPOSITORY ($GITHUB_EVENT_NAME $GITHUB_REF_NAME)"

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.6

      - name: Configure M2_HOME
        run: echo M2_HOME=$(dirname $(which mvn)) >> $GITHUB_ENV

      - name: Configure Git
        run: cd $GITHUB_WORKSPACE && git config --global user.email "nobody@nowhere.com" && git config --global user.name "Nobody" && git config --global gc.auto 0 && git config --global advice.detachedHead 0

      - name: Configure Tmpdir
        run: cd $GITHUB_WORKSPACE && rm -Rf temp && mkdir temp && echo "TMPDIR=$GITHUB_WORKSPACE/temp" >> $GITHUB_ENV

      - name: Set Up Target Branch
        run: echo 'TARGET_BRANCH='$([ "$GITHUB_EVENT_NAME" = "pull_request" ] && echo "$GITHUB_HEAD_REF" || echo "$GITHUB_REF_NAME") >> $GITHUB_ENV

      - name: Set Up Base Branch
        run: echo 'BASE_BRANCH='$([ "$GITHUB_EVENT_NAME" = "pull_request" ] && echo "$GITHUB_BASE_REF" || echo "develop") >> $GITHUB_ENV

      - name: Set Up Target Commit
        run: echo 'TARGET_COMMIT='$([ "$GITHUB_EVENT_NAME" = "pull_request" ] && echo "$GITHUB_REF" || echo "$GITHUB_SHA") >> $GITHUB_ENV
        
      - name: Set Up Checkout Command
        run: echo 'CHECKOUT_COMMAND='$([ "$GITHUB_EVENT_NAME" = "pull_request" ] && echo "git pull --rebase origin $TARGET_COMMIT" || echo "git checkout $TARGET_COMMIT") >> $GITHUB_ENV

      - name: Clone Telenav-Superpoms
        run: cd $GITHUB_WORKSPACE && git clone "https://github.com/Telenav/telenav-superpom.git" -b $BASE_BRANCH

      - name: Clone Cactus
        run: cd $GITHUB_WORKSPACE && git clone "https://github.com/Telenav/cactus.git" -b $BASE_BRANCH

      - name: Fetch All
        run: cd $GITHUB_WORKSPACE/cactus && git fetch --all

      - name: Ensure Merge Commit Is Available Locally
        run: cd $GITHUB_WORKSPACE/cactus && git fetch origin $GITHUB_REF

      - name: Move Project to Target Ref
        run: cd $GITHUB_WORKSPACE/cactus && echo "Run $CHECKOUT_COMMAND" && eval $CHECKOUT_COMMAND

      - name: Configure Maven
        run: mkdir -p $GITHUB_WORKSPACE/cactus/.mvn && echo "-XX:+UseG1GC -Xms2G -Dcactus.debug=true -XX:+UseStringDeduplication --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED" >> $GITHUB_WORKSPACE/cactus/.mvn/jvm.config

      - name: Build Superpoms
        run: cd $GITHUB_WORKSPACE/telenav-superpom && mvn --no-transfer-progress --batch-mode install

      - name: Build Cactus
        run: cd $GITHUB_WORKSPACE/cactus && mvn --no-transfer-progress --batch-mode install
