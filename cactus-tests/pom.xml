<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.telenav.cactus</groupId>
        <artifactId>cactus-parent</artifactId>
        <version>1.5.46</version>
    </parent>

    <artifactId>cactus-tests</artifactId>

    <description>Comprehensive tests for the cactus-maven-plugin's mojos, which create
        entire, buildable, git submodule project trees, run mojos against them and then
        check their state.</description>

    <properties>
        <do.not.publish>true</do.not.publish>
        <enforcer.skip>true</enforcer.skip>
        <lexakai.skip>true</lexakai.skip>
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>cactus-maven-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus-staging-maven-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- Ensure we do not publish this, even with a deploy of sub-projects
                    There is no API here, and no usable way to depend on this project,
                    so no point in cluttering maven-central with it. -->
                    <skipStaging>true</skipStaging>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Works for full test suite but not for test-single -->
                    <useModulePath>false</useModulePath>

                    <systemProperties>

                        <!-- Turn these on to put EVERYTHING in debug-logging mode -->
                        <!--
                        <cactus.test.debug>true</cactus.test.debug>
                        <cactus.test.slf4j.debug>true</cactus.test.slf4j.debug>
                        -->

                        <unit.test>true</unit.test>
                        <!-- to see all details of git output, swap commenting on the next two lines -->

                        <!--<org.slf4j.simpleLogger.defaultLogLevel>debug</org.slf4j.simpleLogger.defaultLogLevel>-->
                        <org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
                        <org.slf4j.simpleLogger.showDateTime>false</org.slf4j.simpleLogger.showDateTime>
                        <org.slf4j.simpleLogger.showShortLogName>true</org.slf4j.simpleLogger.showShortLogName>
                        <org.slf4j.simpleLogger.levelInBrackets>false</org.slf4j.simpleLogger.levelInBrackets>
                    </systemProperties>

                    <!-- Parallel tests seem to break badly on github actions -->
                    <parallel>all</parallel>
                    <properties>
                        <configurationParameters>
                            <junit.jupiter.execution.parallel.enabled>true</junit.jupiter.execution.parallel.enabled>
                            <junit.jupiter.execution.parallel.mode.default>concurrent</junit.jupiter.execution.parallel.mode.default>
                            <junit.jupiter.execution.parallel.mode.classes.default>concurrent</junit.jupiter.execution.parallel.mode.classes.default>
                            <junit.jupiter.execution.parallel.config.strategy>dynamic</junit.jupiter.execution.parallel.config.strategy>
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
